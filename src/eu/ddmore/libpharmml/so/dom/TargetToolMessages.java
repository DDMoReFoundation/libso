/*******************************************************************************
 * Copyright (c) 2014 European Molecular Biology Laboratory,
 * Heidelberg, Germany.
 *
 * Licensed under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in
 * compliance with the License.  You may obtain a copy of
 * the License at
 *
 * 		http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, 
 * software distributed under the License is distributed on 
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY 
 * KIND, either express or implied. See the License for the 
 * specific language governing permissions and limitations 
 * under the License.
 *******************************************************************************/
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.10.16 at 04:24:00 PM BST 
//


package eu.ddmore.libpharmml.so.dom;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

import eu.ddmore.libpharmml.dom.commontypes.PharmMLRootType;
import eu.ddmore.libpharmml.dom.commontypes.RealValue;
import eu.ddmore.libpharmml.dom.commontypes.StringValue;
import eu.ddmore.libpharmml.dom.dataset.ImportData;


/**
 * Type defining the target tool messages.
 * 
 * <p>Java class for TargetToolMessagesType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="TargetToolMessagesType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.pharmml.org/2013/03/CommonTypes}PharmMLRootType">
 *       &lt;sequence>
 *         &lt;element name="Termination" type="{http://www.pharmml.org/2013/03/CommonTypes}StringValue" minOccurs="0"/>
 *         &lt;element name="Warnings" type="{http://www.pharmml.org/2013/03/CommonTypes}StringValue" minOccurs="0"/>
 *         &lt;element name="Errors" type="{http://www.pharmml.org/2013/03/CommonTypes}StringValue" minOccurs="0"/>
 *         &lt;element name="ElapsedTime" type="{http://www.pharmml.org/2013/03/CommonTypes}RealValue" minOccurs="0"/>
 *         &lt;element name="OutputFilePath" type="{http://www.pharmml.org/2013/08/Dataset}ImportData" minOccurs="0"/>
 *         &lt;element name="ChainsNumber" type="{http://www.pharmml.org/2013/03/CommonTypes}RealValue" minOccurs="0"/>
 *         &lt;element name="IterationNumber" type="{http://www.pharmml.org/2013/03/CommonTypes}RealValue" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "TargetToolMessagesType", propOrder = {
    "termination",
    "warnings",
    "errors",
    "elapsedTime",
    "outputFilePath",
    "chainsNumber",
    "iterationNumber"
})
public class TargetToolMessages
    extends PharmMLRootType
{

    @XmlElement(name = "Termination")
    protected StringValue termination;
    @XmlElement(name = "Warnings")
    protected StringValue warnings;
    @XmlElement(name = "Errors")
    protected StringValue errors;
    @XmlElement(name = "ElapsedTime")
    protected RealValue elapsedTime;
    @XmlElement(name = "OutputFilePath")
    protected ImportData outputFilePath;
    @XmlElement(name = "ChainsNumber")
    protected RealValue chainsNumber;
    @XmlElement(name = "IterationNumber")
    protected RealValue iterationNumber;

    /**
     * Gets the value of the termination property.
     * 
     * @return
     *     possible object is
     *     {@link StringValue }
     *     
     */
    public StringValue getTermination() {
        return termination;
    }

    /**
     * Sets the value of the termination property.
     * 
     * @param value
     *     allowed object is
     *     {@link StringValue }
     *     
     */
    public void setTermination(StringValue value) {
        this.termination = value;
    }

    /**
     * Gets the value of the warnings property.
     * 
     * @return
     *     possible object is
     *     {@link StringValue }
     *     
     */
    public StringValue getWarnings() {
        return warnings;
    }

    /**
     * Sets the value of the warnings property.
     * 
     * @param value
     *     allowed object is
     *     {@link StringValue }
     *     
     */
    public void setWarnings(StringValue value) {
        this.warnings = value;
    }

    /**
     * Gets the value of the errors property.
     * 
     * @return
     *     possible object is
     *     {@link StringValue }
     *     
     */
    public StringValue getErrors() {
        return errors;
    }

    /**
     * Sets the value of the errors property.
     * 
     * @param value
     *     allowed object is
     *     {@link StringValue }
     *     
     */
    public void setErrors(StringValue value) {
        this.errors = value;
    }

    /**
     * Gets the value of the elapsedTime property.
     * 
     * @return
     *     possible object is
     *     {@link RealValue }
     *     
     */
    public RealValue getElapsedTime() {
        return elapsedTime;
    }

    /**
     * Sets the value of the elapsedTime property.
     * 
     * @param value
     *     allowed object is
     *     {@link RealValue }
     *     
     */
    public void setElapsedTime(RealValue value) {
        this.elapsedTime = value;
    }

    /**
     * Gets the value of the outputFilePath property.
     * 
     * @return
     *     possible object is
     *     {@link ImportData }
     *     
     */
    public ImportData getOutputFilePath() {
        return outputFilePath;
    }

    /**
     * Sets the value of the outputFilePath property.
     * 
     * @param value
     *     allowed object is
     *     {@link ImportData }
     *     
     */
    public void setOutputFilePath(ImportData value) {
        this.outputFilePath = value;
    }

    /**
     * Gets the value of the chainsNumber property.
     * 
     * @return
     *     possible object is
     *     {@link RealValue }
     *     
     */
    public RealValue getChainsNumber() {
        return chainsNumber;
    }

    /**
     * Sets the value of the chainsNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link RealValue }
     *     
     */
    public void setChainsNumber(RealValue value) {
        this.chainsNumber = value;
    }

    /**
     * Gets the value of the iterationNumber property.
     * 
     * @return
     *     possible object is
     *     {@link RealValue }
     *     
     */
    public RealValue getIterationNumber() {
        return iterationNumber;
    }

    /**
     * Sets the value of the iterationNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link RealValue }
     *     
     */
    public void setIterationNumber(RealValue value) {
        this.iterationNumber = value;
    }
    
    /**
     * Creates a new empty {@link StringValue} termination element, adds it to the current object and returns it.
     * @return The created {@link StringValue} object.
     */
    public StringValue createTermination(){
    	StringValue el = new StringValue();
    	this.termination = el;
    	return el;
    }
    /**
     * Creates a new {@link StringValue} termination element, adds it to the current object and returns it.
     * @return The created {@link StringValue} object.
     */
    public StringValue createTermination(String value){
    	StringValue el = new StringValue();
    	el.setValue(value);
    	this.termination = el;
    	return el;
    }

    /**
     * Creates a new empty {@link StringValue} warnings element, adds it to the current object and returns it.
     * @return The created {@link StringValue} object.
     */
    public StringValue createWarnings(){
    	StringValue el = new StringValue();
    	this.warnings = el;
    	return el;
    }
    /**
     * Creates a new {@link StringValue} warnings element, adds it to the current object and returns it.
     * @return The created {@link StringValue} object.
     */
    public StringValue createWarnings(String value){
    	StringValue el = new StringValue();
    	el.setValue(value);
    	this.warnings = el;
    	return el;
    }

    /**
     * Creates a new empty {@link StringValue} errors element, adds it to the current object and returns it.
     * @return The created {@link StringValue} object.
     */
    public StringValue createErrors(){
    	StringValue el = new StringValue();
    	this.errors = el;
    	return el;
    }
    /**
     * Creates a new {@link StringValue} errors element, adds it to the current object and returns it.
     * @return The created {@link StringValue} object.
     */
    public StringValue createErrors(String value){
    	StringValue el = new StringValue();
    	el.setValue(value);
    	this.errors = el;
    	return el;
    }

    /**
     * Creates a new empty {@link RealValue} elapsedTime element, adds it to the current object and returns it.
     * @return The created {@link RealValue} object.
     */
    public RealValue createElapsedTime(){
    	RealValue el = new RealValue();
    	this.elapsedTime = el;
    	return el;
    }
    /**
     * Creates a new {@link RealValue} elapsedTime element, adds it to the current object and returns it.
     * @return The created {@link RealValue} object.
     */
    public RealValue createElapsedTime(double value){
    	RealValue el = new RealValue();
    	el.setValue(value);
    	this.elapsedTime = el;
    	return el;
    }

    /**
     * Creates a new empty {@link ImportData} outputFilePath element, adds it to the current object and returns it.
     * @return The created {@link ImportData} object.
     */
    public ImportData createOutputFilePath(){
    	ImportData el = new ImportData();
    	this.outputFilePath = el;
    	return el;
    }

    /**
     * Creates a new {@link RealValue} chainsNumber element, adds it to the current object and returns it.
     * @return The created {@link RealValue} object.
     */
    public RealValue createChainsNumber(){
    	RealValue el = new RealValue();
    	this.chainsNumber = el;
    	return el;
    }
    /**
     * Creates a new {@link RealValue} chainsNumber element, adds it to the current object and returns it.
     * @return The created {@link RealValue} object.
     */
    public RealValue createChainsNumber(double value){
    	RealValue el = new RealValue();
    	el.setValue(value);
    	this.chainsNumber = el;
    	return el;
    }

    /**
     * Creates a new empty {@link RealValue} iterationNumber element, adds it to the current object and returns it.
     * @return The created {@link RealValue} object.
     */
    public RealValue createIterationNumber(){
    	RealValue el = new RealValue();
    	this.iterationNumber = el;
    	return el;
    }
    /**
     * Creates a new {@link RealValue} iterationNumber element, adds it to the current object and returns it.
     * @return The created {@link RealValue} object.
     */
    public RealValue createIterationNumber(double value){
    	RealValue el = new RealValue();
    	el.setValue(value);
    	this.iterationNumber = el;
    	return el;
    }

}
