//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.02.20 at 11:14:40 AM GMT 
//


package eu.ddmore.libpharmml.so.dom;

import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * Type for the simulation section of the SO.
 * 
 * <p>Java class for SimulationType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="SimulationType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.pharmml.org/pharmml/0.6/CommonTypes}PharmMLRootType"&gt;
 *       &lt;choice&gt;
 *         &lt;element name="SimulationBlock" type="{http://www.pharmml.org/so/0.1/StandardisedOutput}SimulationBlockType" maxOccurs="unbounded"/&gt;
 *         &lt;sequence&gt;
 *           &lt;element name="SimulatedProfiles" type="{http://www.pharmml.org/so/0.2/StandardisedOutput}SimulationSubType" maxOccurs="unbounded" minOccurs="0"/&gt;
 *           &lt;element name="IndivParameters" type="{http://www.pharmml.org/so/0.2/StandardisedOutput}SimulationSubType" maxOccurs="unbounded" minOccurs="0"/&gt;
 *           &lt;element name="RandomEffects" type="{http://www.pharmml.org/so/0.2/StandardisedOutput}SimulationSubType" maxOccurs="unbounded" minOccurs="0"/&gt;
 *           &lt;element name="Covariates" type="{http://www.pharmml.org/so/0.2/StandardisedOutput}SimulationSubType" maxOccurs="unbounded" minOccurs="0"/&gt;
 *           &lt;element name="PopulationParameters" type="{http://www.pharmml.org/so/0.2/StandardisedOutput}SimulationSubType" maxOccurs="unbounded" minOccurs="0"/&gt;
 *           &lt;element name="Dosing" type="{http://www.pharmml.org/so/0.2/StandardisedOutput}SimulationSubType" maxOccurs="unbounded" minOccurs="0"/&gt;
 *           &lt;element name="RawResultsFile" type="{http://www.pharmml.org/pharmml/0.6/Dataset}ExternalFileType" minOccurs="0"/&gt;
 *         &lt;/sequence&gt;
 *       &lt;/choice&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SimulationType", propOrder = {
    "listOfSimulatedProfiles",
    "listOfIndivParameters",
    "listOfRandomEffects",
    "listOfCovariates",
    "listOfPopulationParameters",
    "listOfDosing",
    "rawResultsFile",
    "listOfSimulationBlocks"
})
public class Simulation
    extends AbstractSimulationBlock
{

    @XmlElement(name = "SimulationBlock")
    protected List<SimulationBlock> listOfSimulationBlocks;

    /**
     * Gets the value of the simulationBlocks property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the simulationBlocks property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getListOfSimulationBlocks().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SimulationBlock }
     * 
     * 
     */
    public List<SimulationBlock> getListOfSimulationBlocks() {
        if (listOfSimulationBlocks == null) {
        	listOfSimulationBlocks = new ArrayList<SimulationBlock>();
        }
        return this.listOfSimulationBlocks;
    }
    
    /**
     * Creates a new empty {@link SimulationBlock} simulationBlocks element, adds it to the current object and returns it.
     * @return The created {@link SimulationBlock} object.
     */
    public SimulationBlock createSimulationBlock(){
            SimulationBlock el = new SimulationBlock();
            getListOfSimulationBlocks().add(el);
            return el;
    }


}
