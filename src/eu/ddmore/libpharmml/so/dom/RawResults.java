/*******************************************************************************
 * Copyright (c) 2014 European Molecular Biology Laboratory,
 * Heidelberg, Germany.
 *
 * Licensed under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in
 * compliance with the License.  You may obtain a copy of
 * the License at
 *
 * 		http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, 
 * software distributed under the License is distributed on 
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY 
 * KIND, either express or implied. See the License for the 
 * specific language governing permissions and limitations 
 * under the License.
 *******************************************************************************/
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.10.16 at 04:24:00 PM BST 
//


package eu.ddmore.libpharmml.so.dom;

import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

import eu.ddmore.libpharmml.dom.commontypes.PharmMLRootType;
import eu.ddmore.libpharmml.dom.dataset.ExternalFile;
import eu.ddmore.libpharmml.dom.dataset.ExternalFile.Delimiter;


/**
 * Row Results Type
 * 
 * <p>Java class for RawResultsType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="RawResultsType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.pharmml.org/2013/03/CommonTypes}PharmMLRootType">
 *       &lt;sequence>
 *         &lt;element name="RawFile" type="{http://www.pharmml.org/2013/08/Dataset}ExternalFile" maxOccurs="unbounded"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "RawResultsType", propOrder = {
    "rawFile"
})
public class RawResults
    extends PharmMLRootType
{

    @XmlElement(name = "RawFile", required = true)
    protected List<ExternalFile> rawFile;

    /**
     * Gets the value of the rawFile property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the rawFile property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRawFile().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ExternalFile }
     * 
     * 
     */
    public List<ExternalFile> getListOfRawFile() {
        if (rawFile == null) {
            rawFile = new ArrayList<ExternalFile>();
        }
        return this.rawFile;
    }
    
    /**
     * Creates a new empty {@link ExternalFile} rawFile element, adds it to the current object and returns it.
     * @return The created {@link ExternalFile} object.
     */
    public ExternalFile createRawFile(){
    	ExternalFile el = new ExternalFile();
    	getListOfRawFile().add(el);
    	return el;
    }
    
    /**
     * Creates a new {@link ExternalFile} raw file with all the required parameters, adds
     * it to the current object and returns it.
     * @param oid
     * @param path Relative path to data file.
     * @param format The file format. (eg. CSV).
     * @param delimiter
     * @return The created {@link ExternalFile} object.
     */
    public ExternalFile createRawFile(String oid, String path, String format, Delimiter delimiter){
    	ExternalFile el = new ExternalFile();
    	el.setOid(oid);
    	el.setPath(path);
    	el.setFormat(format);
    	el.setDelimiter(delimiter);
    	getListOfRawFile().add(el);
    	return el;
    }


}
