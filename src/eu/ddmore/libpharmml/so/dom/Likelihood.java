/*******************************************************************************
 * Copyright (c) 2014 European Molecular Biology Laboratory,
 * Heidelberg, Germany.
 *
 * Licensed under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in
 * compliance with the License.  You may obtain a copy of
 * the License at
 *
 * 		http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, 
 * software distributed under the License is distributed on 
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY 
 * KIND, either express or implied. See the License for the 
 * specific language governing permissions and limitations 
 * under the License.
 *******************************************************************************/
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.10.17 at 04:00:02 PM BST 
//


package eu.ddmore.libpharmml.so.dom;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

import eu.ddmore.libpharmml.dom.commontypes.PharmMLRootType;
import eu.ddmore.libpharmml.dom.commontypes.RealValueType;
import eu.ddmore.libpharmml.dom.dataset.DataSetType;


/**
 * Type defining the likelihood.
 * 
 * <p>Java class for LikelihoodType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="LikelihoodType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.pharmml.org/2013/03/CommonTypes}PharmMLRootType">
 *       &lt;sequence>
 *         &lt;element name="LogLikelihood" type="{http://www.pharmml.org/2013/03/CommonTypes}RealValueType" minOccurs="0"/>
 *         &lt;element name="Deviance" type="{http://www.pharmml.org/2013/03/CommonTypes}RealValueType" minOccurs="0"/>
 *         &lt;element name="OFV" type="{http://www.pharmml.org/2013/03/CommonTypes}RealValueType" minOccurs="0"/>
 *         &lt;element name="IndividualContribToLL" type="{http://www.pharmml.org/2013/08/Dataset}DataSetType" minOccurs="0"/>
 *         &lt;element name="InformationCriteria" type="{http://www.pharmml.org/2013/03/StandardisedOutput}InformationCriteriaType" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "LikelihoodType", propOrder = {
    "logLikelihood",
    "deviance",
    "individualContribToLL",
    "informationCriteria"
})
public class Likelihood
    extends PharmMLRootType
{

    @XmlElement(name = "LogLikelihood")
    protected RealValueType logLikelihood;
    @XmlElement(name = "Deviance")
    protected RealValueType deviance;
    @XmlElement(name = "IndividualContribToLL")
    protected DataSetType individualContribToLL;
    @XmlElement(name = "InformationCriteria")
    protected InformationCriteria informationCriteria;

    /**
     * Gets the value of the logLikelihood property.
     * 
     * @return
     *     possible object is
     *     {@link RealValueType }
     *     
     */
    public RealValueType getLogLikelihood() {
        return logLikelihood;
    }

    /**
     * Sets the value of the logLikelihood property.
     * 
     * @param value
     *     allowed object is
     *     {@link RealValueType }
     *     
     */
    public void setLogLikelihood(RealValueType value) {
        this.logLikelihood = value;
    }

    /**
     * Gets the value of the deviance property.
     * 
     * @return
     *     possible object is
     *     {@link RealValueType }
     *     
     */
    public RealValueType getDeviance() {
        return deviance;
    }

    /**
     * Sets the value of the deviance property.
     * 
     * @param value
     *     allowed object is
     *     {@link RealValueType }
     *     
     */
    public void setDeviance(RealValueType value) {
        this.deviance = value;
    }

    /**
     * Gets the value of the individualContribToLL property.
     * 
     * @return
     *     possible object is
     *     {@link DataSetType }
     *     
     */
    public DataSetType getIndividualContribToLL() {
        return individualContribToLL;
    }

    /**
     * Sets the value of the individualContribToLL property.
     * 
     * @param value
     *     allowed object is
     *     {@link DataSetType }
     *     
     */
    public void setIndividualContribToLL(DataSetType value) {
        this.individualContribToLL = value;
    }

    /**
     * Gets the value of the informationCriteria property.
     * 
     * @return
     *     possible object is
     *     {@link InformationCriteriaType }
     *     
     */
    public InformationCriteria getInformationCriteria() {
        return informationCriteria;
    }

    /**
     * Sets the value of the informationCriteria property.
     * 
     * @param value
     *     allowed object is
     *     {@link InformationCriteriaType }
     *     
     */
    public void setInformationCriteria(InformationCriteria value) {
        this.informationCriteria = value;
    }
    
    /**
     * Creates a new empty {@link RealValueType} logLikelihood element, adds it to the current object and returns it.
     * @return The created {@link RealValueType} object.
     */
    public RealValueType createLogLikelihood(){
    	RealValueType el = new RealValueType();
    	this.logLikelihood = el;
    	return el;
    }
    /**
     * Creates a new {@link RealValueType} logLikelihood element, adds it to the current object and returns it.
     * @param value The real value of the element.
     * @return The created {@link RealValueType} object.
     */
    public RealValueType createLogLikelihood(double value){
    	RealValueType el = new RealValueType();
    	el.setValue(value);
    	this.logLikelihood = el;
    	return el;
    }

    /**
     * Creates a new empty {@link RealValueType} deviance element, adds it to the current object and returns it.
     * @return The created {@link RealValueType} object.
     */
    public RealValueType createDeviance(){
    	RealValueType el = new RealValueType();
    	this.deviance = el;
    	return el;
    }
    /**
     * Creates a new empty {@link RealValueType} deviance element, adds it to the current object and returns it.
     * @param value The real value of the element.
     * @return The created {@link RealValueType} object.
     */
    public RealValueType createDeviance(double value){
    	RealValueType el = new RealValueType();
    	el.setValue(value);
    	this.deviance = el;
    	return el;
    }

    /**
     * Creates a new empty {@link DataSetType} individualContribToLL element, adds it to the current object and returns it.
     * @return The created {@link DataSetType} object.
     */
    public DataSetType createIndividualContribToLL(){
    	DataSetType el = new DataSetType();
    	this.individualContribToLL = el;
    	return el;
    }

    /**
     * Creates a new empty {@link InformationCriteria} informationCriteria element, adds it to the current object and returns it.
     * @return The created {@link InformationCriteria} object.
     */
    public InformationCriteria createInformationCriteria(){
    	InformationCriteria el = new InformationCriteria();
    	this.informationCriteria = el;
    	return el;
    }


}
